{"version":3,"file":"static/js/3090.ff5a38d8.chunk.js","mappings":"uNAsCA,WAAeA,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,GAAU,CACRC,KAAM,oBAFV,EA5BwB,SAACC,GACvB,IAAQC,EAAqDD,EAArDC,aAAcC,EAAuCF,EAAvCE,WAAYC,EAA2BH,EAA3BG,SAAUC,EAAiBJ,EAAjBI,aAC5C,OACE,kBACED,SAAUF,EAAaE,GACvBE,UAAS,2BAAsBD,EAAe,gBAAkB,IAChEE,YAAU,EAHZ,WAKE,SAAC,IAAD,CACEC,KAAK,SACLC,KAAK,OACLC,MAAM,eACNC,UAAWC,EAAAA,EACXC,YAAY,cACZC,SAAU,CAACC,EAAAA,IACLA,UAAU,KAElB,mBACEN,KAAK,SACLH,UAAU,wCACVU,SAAUb,EAHZ,0B,qDCAN,IA1BwB,SAACF,GACvB,IACEgB,EAKEhB,EALFgB,MACAC,EAIEjB,EAJFiB,KACAR,EAGET,EAHFS,MACAK,EAEEd,EAFFc,SAJF,EAMId,EADFkB,KAAQC,EALV,EAKUA,QAASC,EALnB,EAKmBA,MAAOC,EAL1B,EAK0BA,QAE1B,OACE,UAAC,WAAD,WACGZ,IACC,kBACEJ,UAAS,qBAAgBS,EAAW,WAAa,IACjDQ,QAASN,EAAMT,KAFjB,SAIGE,KAGL,4CAAWO,GAAWhB,GAAtB,IAA6BuB,GAAIP,EAAMT,KAAMF,UAAU,kBACtDY,IAAQ,gBAAKZ,UAAU,YAAf,SAA4BY,IACpCE,IACGC,IAAS,gBAAKf,UAAU,mBAAf,SAAmCe,KAC3CC,IAAW,0BAAOA,U,8QCvBtB,IAAMP,EAAW,SAACU,GAAD,OACpBA,GAA2B,kBAAVA,GAAgC,IAAVA,OACjCC,EACA,0BAKGC,EAAQ,SAACF,GAAD,OACjBA,IAAU,WAAWG,KAAKH,GAAS,wBAAqBC,GAEtDG,EAAY,SAACC,GAAD,OAAS,SAACL,GAAD,OACvBA,GAASA,EAAMM,OAASD,EAAxB,kBAAyCA,EAAzC,4BAAoEJ,IAElEM,EAAY,SAACC,GAAD,OAAS,SAACR,GAAD,OACvBA,GAASA,EAAMM,OAASE,EAAxB,kBAAyCA,EAAzC,4BAAoEP,IAG3DQ,GADcL,EAAU,IACXG,EAAU,IAGvBG,GADeN,EAAU,GACLA,EAAU,KAC9BO,EAAcP,EAAU,IACxBQ,EAAcR,EAAU,IAGxBS,GAFeT,EAAU,KACVA,EAAU,KACTA,EAAU,MAG1BU,GAFeV,EAAU,KAELG,EAAU,IAG9BQ,GAFeR,EAAU,GAEjB,SAACP,GAAD,OACjBA,IAAU,oDAAoDG,KAAKH,GAC7D,6BACAC,IAEGlB,EAAO,SAACiB,GAAD,OAChBA,IAAU,iBAAiBG,KAAKH,GAAS,oBAAiBC","sources":["components/others/CouponApplyForm.jsx","helpers/renderFormField.js","helpers/validation.js"],"sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\nimport renderFormField from \"../../helpers/renderFormField\";\nimport '../../styles/index.css';\n\nimport {\n  required,\n} from \"../../helpers/validation\";\n\nconst CouponApplyForm = (props) => {\n  const { handleSubmit, submitting, onSubmit, submitFailed } = props;\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className={`needs-validation ${submitFailed ? \"was-validated\" : \"\"}`}\n      noValidate\n      >\n      <Field\n        name=\"coupon\"\n        type=\"text\"\n        label=\"Have coupon?\"\n        component={renderFormField}\n        placeholder=\"Coupon code\"\n        validate={[required]}\n              required={true}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn-sm btn-primary mt-3 float-end\"\n        disabled={submitting}\n      >\n        Apply\n      </button>\n    </form>\n  );\n};\n\nexport default compose(\n  reduxForm({\n    form: \"couponapplyform\",\n  })\n)(CouponApplyForm);\n","import React from \"react\";\nconst renderFormField = (props) => {\n  const {\n    input,\n    tips,\n    label,\n    required,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      {label && (\n        <label\n          className={`form-label ${required ? \"required\" : \"\"}`}\n          htmlFor={input.name}\n        >\n          {label}\n        </label>\n      )}\n      <input {...input} {...props} id={input.name} className=\"form-control\" />\n      {tips && <div className=\"form-text\">{tips}</div>}\n      {touched &&\n        ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n          (warning && <span>{warning}</span>))}\n    </React.Fragment>\n  );\n};\nexport default renderFormField;\n","export const required = (value) =>\n    value || (typeof value === \"number\" && value === 0)\n        ? undefined\n        : \"This field is required\";\n\nexport const number = (value) =>\n    value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\n\nexport const digit = (value) =>\n    value && !/^[0-9]*$/.test(value) ? \"Must be a number\" : undefined;\n\nconst maxLength = (max) => (value) =>\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\nconst minLength = (min) => (value) =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined;\n\nexport const maxLength30 = maxLength(30);\nexport const minLength8 = minLength(8);\n\nexport const maxLengthOTP = maxLength(6);\nexport const maxLengthMobileNo = maxLength(15);\nexport const maxLength20 = maxLength(20);\nexport const maxLength50 = maxLength(50);\nexport const maxLength150 = maxLength(150);\nexport const maxLength500 = maxLength(500);\nexport const maxLength1000 = maxLength(1000);\nexport const maxLength800 = maxLength(800);\n\nexport const minLengthMobileNo = minLength(5);\nexport const minLengthOTP = minLength(6);\n\nexport const email = (value) =>\n    value && !/^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/i.test(value)\n        ? \"Invalid email address\"\n        : undefined;\n\nexport const name = (value) =>\n    value && !/^[a-zA-Z\\s]*$/i.test(value) ? \"Invalid name\" : undefined;\n\nexport const isOverEighteen = (date) => {\n  let birthday = new Date(date);\n  let age = Math.floor((new Date().getTime() - birthday.getTime()) / 31536000000);\n  return age >= 18 ? undefined : \"You must be at least 18 years old.\";\n};\n"],"names":["compose","reduxForm","form","props","handleSubmit","submitting","onSubmit","submitFailed","className","noValidate","name","type","label","component","renderFormField","placeholder","validate","required","disabled","input","tips","meta","touched","error","warning","htmlFor","id","value","undefined","digit","test","maxLength","max","length","minLength","min","minLength8","maxLengthMobileNo","maxLength20","maxLength50","maxLength1000","minLengthMobileNo","email"],"sourceRoot":""}